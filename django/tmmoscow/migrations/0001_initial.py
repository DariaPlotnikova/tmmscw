# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-28 06:50
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TmUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uniq_id', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID')),
                ('birth', models.IntegerField(verbose_name='\u0413\u043e\u0434 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f')),
                ('edit_pass', models.CharField(blank=True, default=b'123456', max_length=16, verbose_name='\u041f\u0430\u0440\u043e\u043b\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f')),
                ('is_leader', models.BooleanField(default=True, verbose_name='\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c')),
                ('is_org', models.BooleanField(default=False, verbose_name='\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c')),
                ('is_active', models.BooleanField(default=False, verbose_name='\u0410\u043a\u0442\u0438\u0432\u043d\u044b\u0439')),
            ],
            options={
                'db_table': 'tm_user',
                'verbose_name': '\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c',
                'verbose_name_plural': '\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=511, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('start_date', models.DateField(verbose_name='\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430')),
                ('end_date', models.DateField(verbose_name='\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f')),
                ('entry_end_date', models.DateTimeField(blank=True, null=True, verbose_name='\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0437\u0430\u044f\u0432\u043a\u0438')),
                ('place', models.CharField(blank=True, max_length=512, null=True, verbose_name='\u0426\u0435\u043d\u0442\u0440 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0439')),
                ('place_x', models.FloatField(blank=True, null=True, verbose_name='X \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 \u0446\u0435\u043d\u0442\u0440\u0430 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0439')),
                ('place_y', models.FloatField(blank=True, null=True, verbose_name='Y \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 \u0446\u0435\u043d\u0442\u0440\u0430 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0439')),
            ],
            options={
                'ordering': ('start_date',),
                'db_table': 'tm_competition',
                'verbose_name': '\u0421\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0435',
                'verbose_name_plural': '\u0421\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f',
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.FileField(blank=True, null=True, upload_to=b'', verbose_name='\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f')),
                ('date', models.DateField(verbose_name='\u0414\u0430\u0442\u0430')),
                ('place', models.CharField(blank=True, max_length=512, null=True, verbose_name='\u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u0442\u0430')),
                ('place_x', models.FloatField(blank=True, null=True, verbose_name='X \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 \u0441\u0442\u0430\u0440\u0442\u0430 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d')),
                ('place_y', models.FloatField(blank=True, null=True, verbose_name='Y \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 \u0441\u0442\u0430\u0440\u0442\u0430 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d')),
                ('tech_end_date', models.DateTimeField(blank=True, null=True, verbose_name='\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u0430\u0447\u0438 \u0442\u0435\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0437\u0430\u044f\u0432\u043a\u0438')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='tmmoscow.Competition', verbose_name='\u0421\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0435')),
            ],
            options={
                'ordering': ('date',),
                'db_table': 'tm_day',
                'verbose_name': '\u0414\u0435\u043d\u044c \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f',
                'verbose_name_plural': '\u0414\u043d\u0438 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0439',
            },
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField(choices=[(0, '\u041b\u0438\u0447\u043d\u0430\u044f'), (1, '\u0421\u0432\u044f\u0437\u043a\u0430'), (2, '\u0413\u0440\u0443\u043f\u043f\u0430')], verbose_name='\u0422\u0438\u043f \u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u0438')),
                ('is_long', models.BooleanField(default=False, verbose_name='\u0414\u043b\u0438\u043d\u043d\u0430\u044f')),
                ('length', models.FloatField(verbose_name='\u0414\u043b\u0438\u043d\u0430')),
                ('dclass', models.PositiveIntegerField(choices=[(0, b'1'), (1, b'2'), (2, b'3'), (3, b'4'), (4, b'5'), (5, b'6')], default=0, verbose_name='\u041a\u043b\u0430\u0441\u0441 \u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u0438')),
                ('climb', models.FloatField(blank=True, default=0, verbose_name='\u041d\u0430\u0431\u043e\u0440 \u0432\u044b\u0441\u043e\u0442\u044b')),
                ('stage_cnt', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='\u041a\u043e\u043b-\u0432\u043e \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u044d\u0442\u0430\u043f\u043e\u0432')),
                ('point_cnt', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='\u041a\u043e\u043b-\u0432\u043e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u0445 \u043f\u0443\u043d\u043a\u0442\u043e\u0432')),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distances', to='tmmoscow.Day', verbose_name='\u0414\u0435\u043d\u044c \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f')),
            ],
            options={
                'db_table': 'tm_distance',
                'verbose_name': '\u0414\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0434\u043d\u044f',
                'verbose_name_plural': '\u0414\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u0438 \u0434\u043d\u0435\u0439',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=127, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b')),
                ('year_from', models.IntegerField(verbose_name='\u0413\u043e\u0434 \u0441')),
                ('year_to', models.IntegerField(verbose_name='\u0413\u043e\u0434 \u043f\u043e')),
                ('sex', models.PositiveIntegerField(choices=[(0, '\u041c\u0443\u0436\u0441\u043a\u043e\u0439'), (1, '\u0416\u0435\u043d\u0441\u043a\u0438\u0439')], verbose_name='\u041f\u043e\u043b \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432')),
            ],
            options={
                'db_table': 'tm_group',
                'verbose_name': '\u0412\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430',
                'verbose_name_plural': '\u0412\u043e\u0437\u0440\u0430\u0441\u043d\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b',
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=127, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
            ],
            options={
                'db_table': 'tm_qualification',
                'verbose_name': '\u0420\u0430\u0437\u0440\u044f\u0434',
                'verbose_name_plural': '\u0420\u0430\u0437\u0440\u044f\u0434\u044b',
            },
        ),
        migrations.CreateModel(
            name='SpecialGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_groups', to='tmmoscow.Distance', verbose_name='\u0414\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u044f')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specials', to='tmmoscow.Group', verbose_name='\u0413\u0440\u0443\u043f\u043f\u0430')),
                ('qual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specials', to='tmmoscow.Qualification', verbose_name='\u0420\u0430\u0437\u0440\u044f\u0434')),
            ],
            options={
                'db_table': 'tm_specialgroup',
                'verbose_name': '\u041e\u0441\u043e\u0431\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430-\u0440\u0430\u0437\u0440\u044f\u0434',
                'verbose_name_plural': '\u041e\u0441\u043e\u0431\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b-\u0440\u0430\u0437\u0440\u044f\u0434\u044b',
            },
        ),
        migrations.AddField(
            model_name='distance',
            name='groups',
            field=models.ManyToManyField(related_name='distances', to='tmmoscow.Group', verbose_name='\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b'),
        ),
        migrations.AddField(
            model_name='distance',
            name='quals',
            field=models.ManyToManyField(related_name='distances', to='tmmoscow.Qualification', verbose_name='\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0440\u0430\u0437\u0440\u044f\u0434\u044b'),
        ),
        migrations.AddField(
            model_name='tmuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='tmuser',
            name='qual',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='tmmoscow.Qualification', verbose_name='\u0420\u0430\u0437\u0440\u044f\u0434'),
        ),
        migrations.AddField(
            model_name='tmuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
